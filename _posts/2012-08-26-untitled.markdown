---
layout: post
title: The death of APIs
date: '2012-08-26 22:16:00'
---

There’s been much gnashing of teeth over Twitter’s continued moves to restrict use of its APIs as an application platform. But really Twitter is just continuing a much larger trend of big companies eliminating or reducing access to their APIs.

Search APIs are a great example. A few years ago you could get free (or at least a generous free tier) access to Google and Yahoo search APIs. But now these APIs are gone. Bing still has a search API but it is quite expensive ($1000/mo for 500k requests). Google in particular has posted whole blog posts about APIs they are deprecating. Sure, it makes sense to deprecate APIs for products you’re dropping, but how do you explain web search and image search?

I think we went through a few years of API mania where everybody and their brother was publishing a free API and exhorting developers to jump on board. But I think we’re going to look back and realize there was a bit of hysteria at play. APIs have always been about enhancing the value of your platform by getting other people to build features for you. But companies don’t provide APIs out of altruism, and as we’ve seen, they will feel no compunction to remove or restrict those APIs when the business case changes.

So the lesson is, be careful who’s API you’re using. You should understand the business case for why that API exists, and understand your risks of losing access to it.

One important question to ask: Is this API for a product that is explicitly position as a platform? Platforms provide a generic substrate for building applications. Their raison d'être is to provide services through APIs. Platform vendors have the strongest reasons for providing API access. But there’s lots of APIs for end user products. Picasa (Google photos), for example, provides various APIs, but it is also its own product designed for the end user. It’s dangerous to use product APIs because the value of the underlying product is much less dependent on third party applications.

This is the mistake that Twitter API users have been making. The hacker community wants Twitter to be a platform. But that doesn’t make it so. Twitter has always been an end user product, and it’s value as a platform was never particularly clear. This dynamic is just as true for Facebook, I just think a lot more people realize it in that case. Everyone already understands that the Facebook “platform” is a marketing device, and that betting your company on that platform carries a high risk.

When your using some API, you should understand that both companies are getting value from your use of the API. You are getting a valuable service and oftentimes easy access to an installed customer base, and in exchange you are making someone else’s platform more valuable. Pinterest and Instagram would almost certainly not have grown so fast without the use of the Facebook social graph. And in return they have reinforced the value of that graph and its exclusivity to Facebook.

But business conditions change, and what made sense yesterday is just one pivot or re-org away from not making sense today. It’s always good to have a backup plan.